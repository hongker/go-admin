// Code generated by MockGen. DO NOT EDIT.
// Source: app/dbs/dbs.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
	reflect "reflect"
)

// MockIDatabase is a mock of IDatabase interface
type MockIDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockIDatabaseMockRecorder
}

// MockIDatabaseMockRecorder is the mock recorder for MockIDatabase
type MockIDatabaseMockRecorder struct {
	mock *MockIDatabase
}

// NewMockIDatabase creates a new mock instance
func NewMockIDatabase(ctrl *gomock.Controller) *MockIDatabase {
	mock := &MockIDatabase{ctrl: ctrl}
	mock.recorder = &MockIDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIDatabase) EXPECT() *MockIDatabaseMockRecorder {
	return _m.recorder
}

// GetInstance mocks base method
func (_m *MockIDatabase) GetInstance() *gorm.DB {
	ret := _m.ctrl.Call(_m, "GetInstance")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetInstance indicates an expected call of GetInstance
func (_mr *MockIDatabaseMockRecorder) GetInstance() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetInstance", reflect.TypeOf((*MockIDatabase)(nil).GetInstance))
}
